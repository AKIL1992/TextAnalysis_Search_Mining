$$$$$$$$$$$$$$$$$$$$$$
$$ SEARCH RULE SETS $$
$$$$$$$$$$$$$$$$$$$$$$

CREATE COLUMN TABLE "STS_SEARCH"."CUSTOMER" ("ID" INTEGER CS_INT,
	 "FIRSTNAME" SHORTTEXT(100) PHRASE INDEX RATIO 0.200000 FUZZY SEARCH INDEX ON SEARCH ONLY ON FAST PREPROCESS ON TEXT MINING OFF TEXT ANALYSIS OFF,
	 "LASTNAME" SHORTTEXT(100) PHRASE INDEX RATIO 0.200000 FUZZY SEARCH INDEX ON SEARCH ONLY ON FAST PREPROCESS ON TEXT MINING OFF TEXT ANALYSIS OFF,
	 "STREETNAME" NVARCHAR(100) FUZZY SEARCH INDEX ON,
	 "HOUSENUMBER" NVARCHAR(20) FUZZY SEARCH MODE 'HOUSENUMBER',
	 "POSTCODE" NVARCHAR(20) FUZZY SEARCH MODE 'POSTCODE',
	 "CITYNAME" NVARCHAR(100) FUZZY SEARCH INDEX ON,
	 "COUNTRYCODE" NVARCHAR(2),
	 "PHONE" NVARCHAR(20),
	 "DATEOFBIRTH" DAYDATE CS_DAYDATE,
	 PRIMARY KEY ("ID")) UNLOAD PRIORITY 5 AUTO MERGE ;
;
CREATE INDEX "CUSTOMER_CITYNAME" ON "STS_SEARCH"."CUSTOMER" ( "CITYNAME" ASC ) NONLEAF PARTIAL KEY LENGTH 1;

INSERT INTO customer VALUES(1, 'Bill', 'Foulkes', 'Sir Matt Busby Way', '72', 
'M16 0RA', 'Manchester', 'UK', '868Â 8000', '1975-11-09');

CREATE COLUMN TABLE "STS_SEARCH"."TERMMAPPINGS" ("MAPPING_ID" VARCHAR(32),
	 "LIST_ID" VARCHAR(32) NOT NULL ,
	 "LANGUAGE_CODE" VARCHAR(2),
	 "TERM_1" NVARCHAR(255) NOT NULL ,
	 "TERM_2" NVARCHAR(255) NOT NULL ,
	 "WEIGHT" DECIMAL CS_DECIMAL_FLOAT NOT NULL ,
	 PRIMARY KEY ("MAPPING_ID")) UNLOAD PRIORITY 5 AUTO MERGE ;

INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('1', 'firstname', '', 'William', 'Will',  '1.0');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('2', 'firstname', '', 'William', 'Bill',  '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('3', 'firstname', '', 'William', 'Billy',  '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('7', 'firstname', '', 'Will', 'William',  '1.0');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('8', 'firstname', '', 'Will', 'Bill',  '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('9', 'firstname', '', 'Will', 'Billy',  '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('4', 'firstname', '', 'Bill', 'William', '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('5', 'firstname', '', 'Bill', 'Will',  '0.9');
INSERT INTO "STS_SEARCH"."TERMMAPPINGS" VALUES('6', 'firstname', '', 'Bill', 'Billy', '1.0');

CREATE COLUMN TABLE "STS_SEARCH"."STOPWORDS" ("STOPWORD_ID" VARCHAR(32),
	 "LIST_ID" VARCHAR(32) NOT NULL ,
	 "LANGUAGE_CODE" VARCHAR(2),
	 "TERM" NVARCHAR(200) NOT NULL ,
	 PRIMARY KEY ("STOPWORD_ID")) UNLOAD PRIORITY 5 AUTO MERGE ;

INSERT INTO "STS_SEARCH"."STOPWORDS" VALUES('1', 'firstname', '', 'Dr');

CALL SYS.EXECUTE_SEARCH_RULE_SET('
<query>
 <ruleset name="BobsProject:Search.searchruleset" />
 <column name="FIRSTNAME">Dr. willy</column>
 <column name="LASTNAME">smiths</column>
 <column name="CITYNAME">littletan</column>
 <column name="DATEOFBIRTH">1955-12-02</column>
</query>
');

SELECT * FROM "sts_search::CUSTOMER";

$$$$$$$$$$$$
$$ SEARCH $$
$$$$$$$$$$$$

CREATE COLUMN TABLE SEARCH_SUBSTRINGSEARCH (
  id        INTEGER primary key,
  str       NVARCHAR(120)
);

INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (1, 'test');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (2, 'long test');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (3, 'this is a long test run');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (4, 'this is a long text column');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (5, 'this is not a result');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (6, 'text');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (7, 'long text');
INSERT INTO SEARCH_SUBSTRINGSEARCH VALUES (8, 'this result is unwanted');

SELECT * 
FROM SEARCH_SUBSTRINGSEARCH;

SELECT TO_DECIMAL(SCORE(),3,2) AS score, str 
FROM SEARCH_SUBSTRINGSEARCH 
WHERE CONTAINS(str, 'test', FUZZY(0.5, 'similarCalculationMode=SUBSTRINGSEARCH'))
ORDER BY SCORE() DESC;

CREATE COLUMN TABLE SEARCH_CWTEST (
ID INTEGER PRIMARY KEY,
txt TEXT);

INSERT INTO SEARCH_CWTEST VALUES (1, 'ManchesterUnited');
INSERT INTO SEARCH_CWTEST VALUES (2, 'Manchester United');
INSERT INTO SEARCH_CWTEST VALUES (3, 'anchesterUnited');
INSERT INTO SEARCH_CWTEST VALUES (4, 'nchesterUnited');
INSERT INTO SEARCH_CWTEST VALUES (31, 'anchester United');
INSERT INTO SEARCH_CWTEST VALUES (41, 'nchester United');
INSERT INTO SEARCH_CWTEST VALUES (5, 'Manchester');
INSERT INTO SEARCH_CWTEST VALUES (6, 'United');

SELECT *
FROM SEARCH_CWTEST;

SELECT SCORE(), *
FROM SEARCH_CWTEST
WHERE CONTAINS(txt, 'Manchester United', FUZZY(0.0, 'ts=compare'))
ORDER BY 1 DESC;

SELECT SCORE(), *
FROM SEARCH_CWTEST
WHERE CONTAINS(txt, 'Manchester United', FUZZY(0.0, 'ts=compare, composeWords=2'))
ORDER BY 1 DESC;

SELECT SCORE(), *
FROM SEARCH_CWTEST
WHERE CONTAINS(txt, 'ManchesterUnited', FUZZY(0.0, 'ts=compare'))
ORDER BY 1 DESC;

SELECT SCORE(), *
FROM SEARCH_CWTEST
WHERE CONTAINS(txt, 'ManchesterUnited', FUZZY(0.0, 'ts=compare, decomposeWords=2'))
ORDER BY 1 DESC;

DROP TABLE SEARCH_ETWTABLE;
CREATE COLUMN TABLE SEARCH_ETWTABLE
(
  id INTEGER PRIMARY KEY,
  t  TEXT    FUZZY SEARCH INDEX ON
);

INSERT INTO SEARCH_ETWTABLE VALUES (1,'Pink Floyd');
INSERT INTO SEARCH_ETWTABLE VALUES (2,'Pink Floyd and Syd Barratt');
INSERT INTO SEARCH_ETWTABLE VALUES (3,'Piper at the Gates of Dawn (Pink Floyd)');
INSERT INTO SEARCH_ETWTABLE VALUES (4,'Kinp Dylof');

-- select 1
SELECT TO_DECIMAL(SCORE(),3,2) AS score, * FROM SEARCH_ETWTABLE
WHERE CONTAINS(t, 'Pink Floyd', FUZZY(0.5,'textSearch=compare,excessTokenWeight=1.0'))
ORDER BY score DESC, id;

-- select 2
SELECT TO_DECIMAL(SCORE(),3,2) AS score, * FROM SEARCH_ETWTABLE
WHERE CONTAINS(t, 'Pink Floyd', FUZZY(0.5,'textSearch=compare,excessTokenWeight=0.1'))
ORDER BY score DESC, id;

-- select 2b
SELECT TO_DECIMAL(SCORE(),3,2) AS score, * FROM SEARCH_ETWTABLE
WHERE CONTAINS(t, 'Pink Floyd', FUZZY(0.5,'textSearch=compare,excessTokenWeight=0.0'))
ORDER BY score DESC, id;
